service: halilovic-dynamoDB-api

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.productsTableName}

custom:
  productsTableName: halilovic-products-table-${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

functions:
  getProduct:
    handler: api.getProduct
    name: halilovic-get-product
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: halilovic-product/{productId}
          method: GET
          request:
           parameters:
              querystrings:
                currency: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: !GetAtt ProductsTable.Arn
  createProduct:
    handler: api.createProduct
    name: halilovic-create-product
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: halilovic-product
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: !GetAtt ProductsTable.Arn
  updateProduct:
    handler: api.updateProduct
    name: halilovic-update-product
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: halilovic-product/{productId}
          method: PUT
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resource: !GetAtt ProductsTable.Arn
  deleteProduct:
    handler: api.deleteProduct
    name: halilovic-delete-product
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: halilovic-product/{productId}
          method: DELETE
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource: !GetAtt ProductsTable.Arn
  getAllProducts:
    handler: api.getAllProducts
    name: halilovic-get-all-products
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: halilovic-products
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: !GetAtt ProductsTable.Arn

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.productsTableName}
        AttributeDefinitions:
          - AttributeName: productId
            AttributeType: S
        KeySchema:
          - AttributeName: productId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
